#include <vector>
#include <queue>
#include <iostream>

using namespace std;

vector<double> findMedian(vector<int> nums) { 
  priority_queue<int> left;
  priority_queue<int, vector<int>, greater<>> right;
  vector<double> medians;

  for (int num : nums){

    if (left.empty() || num <= left.top()){
      left.push(num);
    }
    else {
      right.push(num);
    }

    if (left.size() > right.size() + 1) {
      right.push(left.top());
      left.pop();
    }
    else if (right.size() > left.size()) {
      left.push(right.top());
      right.pop();
    }

    if (left.size() == right.size()) {
      medians.push_back((left.top() + right.top())/2.0);
    }
    else {
      medians.push_back(left.top());
    }
    

  }
  return medians;
  
   

} 
